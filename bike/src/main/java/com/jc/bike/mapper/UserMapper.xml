<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jc.bike.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.jc.bike.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="depart" property="depart" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userface" property="userface" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="UserWithRoles" type="com.jc.bike.model.User" extends="BaseResultMap">
    <collection property="roles" ofType="com.jc.bike.model.Role">
      <id column="rid" property="id"/>
      <result column="rname" property="name"/>
      <result column="rnamezh" property="namezh"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, address, phone, depart, username, password, userface, enabled, remark
  </sql>
  <select id="getAllUsers" resultMap="UserWithRoles">
    SELECT
	`user`.id,
	`user`. NAME,
	`user`.address,
	`user`.phone,
	`user`.depart,
	`user`.username,
	`user`.userface,
	`user`.enabled,
	`user`.remark,
	r.id as rid,
	r. name as rname,
	r.namezh as rnamezh
FROM USER LEFT JOIN user_role ur ON `user`.id = ur.userid LEFT JOIN role r ON ur.rid = r.id WHERE user.id != #{userid}
    <if test="keywords!=null">
      and user.name like concat('%',#{keywords},'%')
    </if>
	order by user.id
  </select>
  <select id="getAllUser" resultMap="BaseResultMap">
    select * from user
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getUserRolesById" resultType="com.jc.bike.model.Role">
    select r.* from role r,user_role ur where ur.`rid`=r.`id` and ur.`userid`=#{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jc.bike.model.User" >
    insert into user (id, name, address, 
      phone, depart, username, 
      password, userface, enabled, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=CHAR}, #{depart,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userface,jdbcType=VARCHAR}, #{enabled,jdbcType=VARCHAR}, 
      #{remark,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jc.bike.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="depart != null" >
        depart,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userface != null" >
        userface,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="depart != null" >
        #{depart,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        #{userface,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jc.bike.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="depart != null" >
        depart = #{depart,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        userface = #{userface,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jc.bike.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      depart = #{depart,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userface = #{userface,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from user where username=#{username}
  </select>
  <delete id="deletdUserByIds" >
    delete from user where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <update id="updatePassword">
    update user set password=#{encodePass} where id=#{id}
  </update>
  <update id="updateUserface">
    update user set userface=#{url} where id=#{id}
  </update>
</mapper>